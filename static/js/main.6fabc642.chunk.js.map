{"version":3,"sources":["components/header/header.component.jsx","firebase/firebase.utils.js","components/item/item.component.jsx","components/items-list/items-list.component.jsx","components/custom-input/custom-input.component.jsx","components/nav/nav.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","className","createTask","a","uid","title","createTime","newTask","completed","taskRef","db","collection","doc","add","console","log","massage","deleteTask","taskId","delete","message","completeTask","update","error","createUserProfileDocument","userAuth","userRef","get","exists","displayName","email","createdAt","Date","set","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","provider","GoogleAuthProvider","setCustomParameters","promt","signInWithGoogle","signInWithPopup","Item","deleteTaskHandle","completeTaskHandle","onClick","ItemsList","user","useState","tasks","setTasks","useEffect","id","orderBy","onSnapshot","snapShot","docs","map","_id","data","index","CustomInput","handleChange","otherProps","onChange","Nav","currentUser","Object","keys","length","signOut","App","props","setNewTask","setUser","unsubscribe","onAuthStateChanged","handleSubmit","e","preventDefault","Timestamp","fromDate","onSubmit","name","placeholder","target","value","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6fabc642.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./header.styles.scss\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header-container\">\r\n      <div className=\"title\">TODOS</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyA7vzleomr7Dz9wxVf8-LafhmteuQNCe-A\",\r\n  authDomain: \"task-app-d76ee.firebaseapp.com\",\r\n  projectId: \"task-app-d76ee\",\r\n  storageBucket: \"task-app-d76ee.appspot.com\",\r\n  messagingSenderId: \"338240483157\",\r\n  appId: \"1:338240483157:web:e5058c8e10bb4d7d90c9dc\",\r\n};\r\n\r\nconst createTask = async ({ uid, title, createTime }) => {\r\n  const newTask = {\r\n    title: title,\r\n    completed: false,\r\n    createTime: createTime,\r\n  };\r\n  const taskRef = db.collection(\"users\").doc(uid).collection(\"todos\");\r\n  try {\r\n    await taskRef.add(newTask);\r\n  } catch (error) {\r\n    console.log(\"Create task error: \", error.massage);\r\n  }\r\n  return newTask;\r\n};\r\n\r\nconst deleteTask = async (uid, taskId) => {\r\n  try {\r\n    await db\r\n      .collection(\"users\")\r\n      .doc(uid)\r\n      .collection(\"todos\")\r\n      .doc(taskId)\r\n      .delete();\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\nconst completeTask = async (uid, taskId, completed) => {\r\n  const taskRef = db\r\n    .collection(\"users\")\r\n    .doc(uid)\r\n    .collection(\"todos\")\r\n    .doc(taskId);\r\n  console.log(taskRef);\r\n  try {\r\n    taskRef.update({\r\n      completed: !completed,\r\n    });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\nexport const createUserProfileDocument = async (userAuth) => {\r\n  if (!userAuth) return;\r\n\r\n  const userRef = db.doc(`users/${userAuth.uid}`);\r\n\r\n  const snapShot = await userRef.get();\r\n\r\n  if (!snapShot.exists) {\r\n    const { displayName, email } = userAuth;\r\n    const createdAt = new Date();\r\n    try {\r\n      await userRef.set({\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"error creating user\", error.message);\r\n    }\r\n  }\r\n\r\n  return userRef;\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(config);\r\n\r\nconst db = firebaseApp.firestore();\r\n\r\nconst auth = firebase.auth();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ promt: \"select_account\" });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport { db, createTask, auth, deleteTask, completeTask };\r\n","import React from \"react\";\r\nimport RadioButtonUncheckedIcon from \"@material-ui/icons/RadioButtonUnchecked\";\r\nimport RadioButtonCheckedIcon from \"@material-ui/icons/RadioButtonChecked\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport { deleteTask, completeTask } from \"../../firebase/firebase.utils\";\r\n\r\nimport \"./item.styles.scss\";\r\n\r\nconst Item = ({ title, completed, taskId, uid }) => {\r\n  const deleteTaskHandle = async () => {\r\n    await deleteTask(uid, taskId);\r\n  };\r\n\r\n  const completeTaskHandle = async () => {\r\n    await completeTask(uid, taskId, completed);\r\n  };\r\n  return (\r\n    <div className=\"item-container\">\r\n      <div className=\"icon-container\" onClick={completeTaskHandle}>\r\n        {completed ? (\r\n          <RadioButtonCheckedIcon className=\"completed\" />\r\n        ) : (\r\n          <RadioButtonUncheckedIcon />\r\n        )}\r\n      </div>\r\n\r\n      <div className={`title ${completed ? \"completed\" : \"\"}`}>{title}</div>\r\n      <div className=\"del-container\">\r\n        <DeleteForeverIcon onClick={deleteTaskHandle} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Item from \"../item/item.component\";\r\nimport { db } from \"../../firebase/firebase.utils\";\r\n\r\n// import \"./items-list.styles.scss\";\r\n\r\nconst ItemsList = ({ user }) => {\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    db.collection(\"users\")\r\n      .doc(user.id)\r\n      .collection(\"todos\")\r\n      .orderBy(\"createTime\", \"desc\")\r\n      .onSnapshot((snapShot) => {\r\n        setTasks(\r\n          snapShot.docs.map((doc) => {\r\n            return { _id: doc.id, ...doc.data() };\r\n          })\r\n        );\r\n      });\r\n  }, [user]);\r\n\r\n  const uid = user.id;\r\n  return (\r\n    <div className=\"items-list-container\">\r\n      {tasks.map(({ title, completed, _id }, index) => {\r\n        return (\r\n          <Item\r\n            key={index}\r\n            title={title}\r\n            completed={completed}\r\n            taskId={_id}\r\n            uid={uid}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemsList;\r\n","import React from \"react\";\r\n\r\nimport \"./custom-input.styles.scss\";\r\n\r\nconst CustomInput = ({ handleChange, ...otherProps }) => {\r\n  return (\r\n    <div>\r\n      <input className=\"custom-input\" onChange={handleChange} {...otherProps} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomInput;\r\n","import React from \"react\";\r\nimport { signInWithGoogle, auth } from \"../../firebase/firebase.utils\";\r\nimport \"./nav.styles.scss\";\r\n\r\nconst Nav = ({ currentUser }) => {\r\n  return (\r\n    <div className=\"nav-container\">\r\n      <div className=\"user\">{currentUser && currentUser.displayName}</div>\r\n\r\n      {Object.keys(currentUser).length === 0 ? (\r\n        <button onClick={signInWithGoogle}>Sign In</button>\r\n      ) : (\r\n        <button onClick={() => auth.signOut()}>Sign Out</button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport Header from \"./components/header/header.component\";\r\nimport ItemsList from \"./components/items-list/items-list.component\";\r\nimport CustomInput from \"./components/custom-input/custom-input.component\";\r\nimport Nav from \"./components/nav/nav.component\";\r\n\r\nimport {\r\n  createTask,\r\n  auth,\r\n  createUserProfileDocument,\r\n} from \"./firebase/firebase.utils\";\r\nimport firebase from \"firebase/app\";\r\n\r\nfunction App(props) {\r\n  // const [tasks, setTasks] = useState([]);\r\n  const [newTask, setNewTask] = useState(\"\");\r\n  const [user, setUser] = useState({});\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(async (userAuth) => {\r\n      if (userAuth) {\r\n        const userRef = await createUserProfileDocument(userAuth);\r\n        userRef.onSnapshot((snapShot) => {\r\n          setUser({\r\n            id: snapShot.id,\r\n            ...snapShot.data(),\r\n          });\r\n        });\r\n      } else {\r\n        setUser({});\r\n      }\r\n\r\n      return () => {\r\n        unsubscribe();\r\n      };\r\n    });\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // newTask.title && setTasks([...tasks, newTask]);\r\n    newTask &&\r\n      (await createTask({\r\n        uid: user.id,\r\n        title: newTask,\r\n        createTime: firebase.firestore.Timestamp.fromDate(new Date()),\r\n      }));\r\n    setNewTask(\"\");\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setNewTask(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Nav currentUser={user} />\r\n      <Header />\r\n      {Object.keys(user).length !== 0 && (\r\n        <div>\r\n          <form onSubmit={handleSubmit}>\r\n            <CustomInput\r\n              name=\"add-note\"\r\n              placeholder=\"Create task\"\r\n              onChange={handleChange}\r\n              value={newTask}\r\n              type=\"text\"\r\n            />\r\n          </form>\r\n          <ItemsList user={user} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}